@inject Microsoft.AspNetCore.Identity.SignInManager<Appointment_Scheduler.Models.ApplicationUser> signInManager

@if(signInManager.IsSignedIn(User))
{
    <form method="post" id="logoutForm" asp-action="Logoff" asp-controller="Account">
<ul class="nav navbar-nav">
    <li class="text-black nav-link">Hello,@User.Identity.Name</li>
    <li><a class="text-black nav-link" href="javascript:document.getElementById('logoutForm').submit()">Log Off</a></li>
</ul>

    </form>
}
else {

<ul class="nav navbar-nav">

    <li>
        <a class="nav-link text-black" id="registerLink" asp-controller="Account" asp-action="Register">Register</a>
        @*@Html.ActionLink("Sign Up", "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink" })*@

    </li>
    <li>
        <a class="nav-link text-black" id="loginLink" asp-controller="Account" asp-action="Login">Login</a>
    </li>
   
    @*<li>@Html.ActionLink("Sign In", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })*@
    
    
</ul>

    }